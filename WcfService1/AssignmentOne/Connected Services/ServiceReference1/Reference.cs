//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssignmentOne.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isPrime", ReplyAction="http://tempuri.org/IService1/isPrimeResponse")]
        string isPrime(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isPrime", ReplyAction="http://tempuri.org/IService1/isPrimeResponse")]
        System.Threading.Tasks.Task<string> isPrimeAsync(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sumDigits", ReplyAction="http://tempuri.org/IService1/sumDigitsResponse")]
        int sumDigits(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sumDigits", ReplyAction="http://tempuri.org/IService1/sumDigitsResponse")]
        System.Threading.Tasks.Task<int> sumDigitsAsync(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/reverseString", ReplyAction="http://tempuri.org/IService1/reverseStringResponse")]
        string reverseString(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/reverseString", ReplyAction="http://tempuri.org/IService1/reverseStringResponse")]
        System.Threading.Tasks.Task<string> reverseStringAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/htmlOut", ReplyAction="http://tempuri.org/IService1/htmlOutResponse")]
        string htmlOut(string tag, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/htmlOut", ReplyAction="http://tempuri.org/IService1/htmlOutResponse")]
        System.Threading.Tasks.Task<string> htmlOutAsync(string tag, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sortNums", ReplyAction="http://tempuri.org/IService1/sortNumsResponse")]
        string sortNums(string sort, string nums);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sortNums", ReplyAction="http://tempuri.org/IService1/sortNumsResponse")]
        System.Threading.Tasks.Task<string> sortNumsAsync(string sort, string nums);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : AssignmentOne.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<AssignmentOne.ServiceReference1.IService1>, AssignmentOne.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string isPrime(int num) {
            return base.Channel.isPrime(num);
        }
        
        public System.Threading.Tasks.Task<string> isPrimeAsync(int num) {
            return base.Channel.isPrimeAsync(num);
        }
        
        public int sumDigits(int num) {
            return base.Channel.sumDigits(num);
        }
        
        public System.Threading.Tasks.Task<int> sumDigitsAsync(int num) {
            return base.Channel.sumDigitsAsync(num);
        }
        
        public string reverseString(string str) {
            return base.Channel.reverseString(str);
        }
        
        public System.Threading.Tasks.Task<string> reverseStringAsync(string str) {
            return base.Channel.reverseStringAsync(str);
        }
        
        public string htmlOut(string tag, string data) {
            return base.Channel.htmlOut(tag, data);
        }
        
        public System.Threading.Tasks.Task<string> htmlOutAsync(string tag, string data) {
            return base.Channel.htmlOutAsync(tag, data);
        }
        
        public string sortNums(string sort, string nums) {
            return base.Channel.sortNums(sort, nums);
        }
        
        public System.Threading.Tasks.Task<string> sortNumsAsync(string sort, string nums) {
            return base.Channel.sortNumsAsync(sort, nums);
        }
    }
}
